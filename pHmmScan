#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'
require 'bio'
require 'SunGrid'

ARGV.push("-h") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :command, "hmm search program", :default=>"hmmscan", :type => :string
  opt :database, "HMM database to use", 
      :default=>"/usr/local/db/HMM3_LIB/ALL_LIB.HMM", :type => :string
  opt :input, "FASTA input file(s)", :required => true, :type => :strings
  opt :project, "JCVI project number", :required => true, :type => :string
  opt :sizejob, "number of sequences per grid job", 
      :type=>:integer, :default=>10000
  opt :queue, "grid queue to use", :type=>:string, :default => "medium" 
end

if File.basename(opts.database) == opts.database
  opts.database = Dir.pwd + "/" + opts.database
end

opts.input.each do |file|
  outName = File.basename(file, ".pep") + "_" + File.basename(opts.database)
  next if File.exist?(outName + ".tbl")
  hout = File.basename(file) + "_vs_" + File.basename(opts.database) + ".out"
  tblout = File.basename(file) + "_vs_" + File.basename(opts.database) + ".tbl"
  domout = File.basename(file) + "_vs_" + File.basename(opts.database) + ".dom"
  if (!File.exists?(file))
    STDERR.printf("File %s does not exist!\n", file)
    next
  end
  hmm = "#{opts.command} --cut_tc -Z 15930 -o hmmscan_input.$SGE_TASK_ID.out "
  hmm += "--tblout hmmscan_input.$SGE_TASK_ID.tbl "
  hmm += "--domtblout hmmscan_input.$SGE_TASK_ID.dom #{opts.database} "
  grid = SunGrid.new(hmm, opts.project, "4G", opts.queue)
  count = 0
  out = nil

  Bio::FlatFile.new(Bio::FastaFormat, File.new(file)).each do |seq|
    if (count % opts.sizejob == 0)
      out.close if (!out.nil?)
      out = File.new(grid.next, "w")
    end 
    out.print seq
    count += 1
  end
  out.close
  grid.submit(sync = true)
  out = File.new(outName + ".tbl", "w")
  Dir.glob("*input*.tbl").each do |tbl|
    File.new(tbl).each do |line|
      out.print line
    end
  end
  out.close
  out = File.new(outName + ".dom", "w")
  Dir.glob("*input*.dom").each do |dom|
    File.new(dom).each do |line|
      out.print line
    end
  end
  out.close
  grid.cleanup
end
