#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'rubygems'
require 'DBwrapper'
require 'csv'

opt = OpenStruct.new
o = OptionParser.new
o.banner << " stap.res gold.db"
begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size != 2)
  STDERR << o
  exit(1)
end

stap, gold = ARGV

db = SQLite.new(gold)

levs = ["phylum", "class", "ord", "family", "genus"]

count = Hash.new
tax = Hash.new
File.new(stap).each {|line|
  fields = line.chomp.split("\t")
  name = fields[0]
  tax[name] = ""
  count[name] = [0,0,0,0,0]
  classification = fields[-2].split("|")
  classification.shift
  classification.shift
  if (classification[1] == "BACILLALES" || 
      classification[1] == "LACTOBACILLALES")
    classification.insert(1, "BACILLI")
  end
  if (classification[2] == "CORIOBACTERIALES")
    classification[1] = "ACTINOBACTERIA (CLASS)"
  end
  if (classification[3] == "CORIOBACTERINEAE")
    classification.delete("CORIOBACTERINEAE")
  end
  levs.size.times {|i|
    taxon = classification[i].capitalize 
    count[name][i] += db.count("gold WHERE #{levs[i]} = '#{taxon}'")
    tax[name] += taxon
    tax[name] += "; " if levs[i] != "genus"
  }
}
print ["sequence","STAP taxonomy","Sequenced Phylum","Sequenced Class",
 "Sequenced Order", "Sequenced Family", "Sequenced Genus"].to_csv
count.keys.sort.each {|name|
  line = [name, tax[name]] + count[name]
  print line.to_csv
}
