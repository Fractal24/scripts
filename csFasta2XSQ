#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :input, "input librarie(s) to convert", :required=>true, :type=>:strings
  opt :conversion, "conversion type", :default=>"BCPE", :type=> :string
  opt :lane, "lane number", :default=>1, :type=>:integer
  opt :imin, "minimum insert size", :default=>150, :type=>:integer
  opt :imax, "maximum insert size", :default=>400, :type=>:integer
end

cdir = Dir.pwd

exp = nil
opts.input.each do |dir|
  paths = dir.split("/")
  experiment = paths[-2]
  library = paths.last
  fullPath = cdir + "/" + experiment + "/" + library
  reads = Dir.glob(dir + "/primary*/reads/*")
  f3fa = reads.grep(/F3/).grep(/csfasta/).first
  f3qual = reads.grep(/F3/).grep(/qual/).first
  f5fa = reads.grep(/F5/).grep(/csfasta/).first
  f5qual = reads.grep(/F5/).grep(/qual/).first
  bcfa = reads.grep(/_BC/).grep(/csfasta/).first
  bcqual = reads.grep(/_BC/).grep(/qual/).first
  if f3fa.nil?
    printf("I can't find F3 in #{dir}. Help!\n")
    exit(1)
  end
  if bcfa.nil?
    printf("I can't find BC in #{dir}. Help!\n")
    exit(1)
  end
  outXSQ = "#{cdir}/#{experiment}-#{library}.xsq"
  if (!File.exist?(outXSQ))
    time = File.ctime(f3fa).strftime("%Y-%m-%d %H:%M:%S")
    command = "convertToXSQ.sh --mode=#{opts.conversion} "
    command += "--c1=#{f3fa} --q1=#{f3qual} " if f3fa
    command += "--c2=#{f5fa} --q2=#{f5qual} " if f5fa
    command += "--bc1=#{bcfa} --bq1=#{bcqual} "
    command += "--libraryInsertSizeMinimum=#{opts.imin} "
    command += "--libraryInsertSizeMaximum=#{opts.imax} "
    command += "--xsqfile=#{outXSQ} "
    command += "--libraryName=#{library} "
    command += "--laneNumber=#{opts.lane} "
    command += "--runStartTime=\"#{time}\""
    out = File.new("#{library}.sh", "w")
    out.printf("export PATH=%s\n",ENV["PATH"])
    out.print command
    out.close
    system("qsub #{library}.sh")
  end
  opts.lane += 1
end
