#!/usr/bin/env ruby

require 'rubygems'
require 'bio'    
require 'trollop'

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :input, "Input alignment file(s)", :required=>true, :type=>:strings
  opt :phylip, "use PHYLIP format for input"
  opt :amphora2, "fix amphora2 style headers"
end

def fix_amphora2(key)
  if key =~/-NC/
    key = key.split("-").last
  elsif key=~/_[0-9]*$/
    key = key.split("_")[0..-2].join("_")
  end
end

if opts.phylip
  Alignment = Bio::Phylip::PhylipFormat
else
  Alignment = Bio::Alignment::MultiFastaFormat
end

keys = Alignment.new(File.read(opts.input.first)).alignment.keys

keys = keys.collect{|x| fix_amphora2(x)} if (opts.amphora2)

bad = []
multi = Hash.new
keys.each do |key|
  multi[key] = ""
end

opts.input.each do |file|
  aln = Alignment.new(File.read(file)).alignment
  seen = Hash.new
  aln.keys.each do |key|
    if (opts.amphora2)
      goodkey = fix_amphora2(key)
    else
      goodkey = key
    end
    if (keys.include?(goodkey))
      multi[goodkey] += aln[key]
      seen[goodkey] = true
    else
      #STDERR << goodkey << " not in keys. Removing...\n"
      bad.push(goodkey)
    end
  end
  missing = keys - seen.keys
  STDERR << missing.length << " from " << file << "\n"
  keys -= missing
end

finalkeys = keys - bad

finalkeys.each do |key|
  print Bio::Sequence::AA.new(multi[key]).to_fasta(key, 60)
end
