#!/usr/bin/env ruby

require 'ostruct'
require 'optparse'
require 'rubygems'
require 'bio'
opt = OpenStruct.new

ARGV.options {|opts|
  opts.banner << " fasta"
  #opts.on(nil, "--report", "run apisReport when done") {|t| opt.report = t}    
  begin
    opts.parse!
  rescue
    STDERR.puts $!.message
    STDERR.puts opts
    exit(1)
  end
  if (ARGV.size != 1)
    STDERR.puts opts
    exit(1)
  end
}

prot, rest = ARGV

count = "READ0000001"
Bio::FlatFile.new(Bio::FastaFormat, File.new(prot)).each {|seq|
  if seq.definition =~/SOURCE_1=\"([^\"]*)\"/
    seq.definition = count + " " + $1
    print seq.seq.upcase.to_fasta(seq.definition, 60)
    count.succ!
  else
    STDERR.printf("No SOURCE_1 in %s\n", $1)
  end
}
