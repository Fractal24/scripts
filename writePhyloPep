#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'dm-core'

opt = OpenStruct.new
opt.host = "mysql://access:access@mysql-lan-pro"
opt.db = "phylodb"

o = OptionParser.new
o.banner << " fasta"
o.on("-d ", "--database ", String, "database (#{opt.db})") {|t| opt.db = t}
o.on("-h ", "--host ", String, "database host (#{opt.host})") {|t| opt.host = t}
begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size != 0)
  STDERR << o
  exit(1)
end

DataMapper.setup(:default, opt.host + "/" + opt.db)

repository(:default).adapter.select("select proteins.name, proteins.annotation, proteins.seq, species from proteins, contigs WHERE contig_name = contigs.name order by contig_name,proteins.name").each do |row|
  pname, annotation, seq, species = row.to_a
  annotation.strip!
  if (pname =~/^[0-9]/)
    # fix lack of gi
    db.query("update proteins set name = 'gi#{pname}' where name = '#{pname}'")
    pname = "gi" + pname
  end
  header = "#{pname} #{annotation} {#{species}}" 
  print ">#{header}\n#{seq.gsub(Regexp.new(".{1,60}"), "\\0\n")}"
end