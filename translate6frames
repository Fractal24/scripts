#!/usr/bin/env ruby

require 'ostruct'
require 'rubygems'
require 'bio'
require 'ZFile'
require 'optparse'
require 'Btab'

opt = OpenStruct.new

ARGV.options do |opts|
  opts.banner << " fasta [...fasta] [btab...btab..]"
  begin
    opts.parse!
  rescue
    STDERR.puts $!.message
    STDERR.puts opts
    exit(1)
  end
  if (ARGV.size < 1)
    STDERR.puts opts
    exit(1)
  end
end

btabs = ARGV.grep(/btab/)
dnas = ARGV - btabs

hits = Hash.new
if (!btabs.empty?)
  btabs.each do |btab|
    STDERR.printf("Loading %s...\n", btab)
    Btab.new(btab).each do |query|
      hits[query.name] = query.matches.first.name
    end
  end
end


dnas.each do |dna|
  name = File.basename(dna).split(".f").first
  STDERR.printf("Processing %s...\n", name)
  out = File.new(name + "_6frames.fa", "w")
  Bio::FlatFile.new(Bio::FastaFormat, ZFile.new(dna)).each do |seq|
    next if seq.length < 90
    [1, 2, 3, -1, -2, -3].each do |frame|
      orfName = seq.entry_id + "_" + frame.to_s
      orfName += "_" + hits[seq.entry_id] if (hits[seq.entry_id]) 
      prot = seq.naseq.translate(frame, 11)
      out.print Bio::Sequence::AA.new(prot).to_fasta(orfName, 60)
    end
  end
  out.close
end
