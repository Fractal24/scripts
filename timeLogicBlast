#!/usr/bin/env ruby

$VERBOSE = nil

require 'rubygems'
require 'trollop'

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :input, "Input fasta file(s)", :required=>true, :type=>:strings
  opt :database, "timelogic db to use", :required=>true, :type=>:string
  opt :blast, "blast program to run", :default=>"blastp", :type=>:string
  opt :evalue, "BLAST evalue", :default=>1e-9, :type=>:float
  opt :server, "Timelogic server", :default=>"tmlsrv1.jcvi.org", :type=>:string
  opt :user, "Timelogic user", :default=>ENV["USER"], :type=>:string
  opt :password, "Timelogic password", :required=>true, :type=>:string
  opt :maxHits, "Maximum blast hits", :default=>50, :type=>:integer
  opt :format, "Blast format (full, btab, or m8)", :default=>"m8", :type=>:string
end

db = ARGV.shift

if (opts.blast !~ /^blast[n|p|x]/ && opts.blast !~/tblastn/)
  STDERR.printf("Only blastn, blastp, blastx, and tblastn are valid grid BLAST programs\n")
  exit(1)
end

opts.input.each do |file|
  bout = File.basename(file) + "_vs_" + File.basename(opts.database)
  if opts.format == "btab"
     bout += ".btab"
  elsif opts.format == "m8"
    bout += ".m8"
  else
    bout += ".blast"
  end 
  if (!File.exists?(file))
    STDERR.printf("File %s does not exist!\n", file)
    next
  end
  STDERR << "Processing #{file}....\n"
  cmd = "dc_run -parameters tera-#{opts.blast} -database #{opts.database} "
  cmd += "-threshold significance=#{opts.evalue} "
  cmd += "-max_alignments #{opts.maxHits} -max_scores #{opts.maxHits} "
  cmd += "-query #{file} -user #{opts.user} -password #{opts.password} "
  cmd += "-server #{opts.server} "
  if opts.format == "m8" || opts.format == "btab"
    cmd += "-output_format tab "
    if opts.format == "btab" 
       cmd += "-field querytext queryaccession querylength "
       cmd += "algorithm userid targetlocus querystart queryend "
       cmd += "targetstart targetend alignmentlength matches "
       cmd += "score score targetdescription queryframe queryframe "
       cmd += "queryframe significance significance"
   elsif opts.format == "m8"
      cmd += "-field querylocus targetlocus percentalignment "
      cmd += "alignmentlength matches gaps querystart queryend "
      cmd += "targetstart targetend significance score"
   end
 end
 cmd += "> #{bout}"
 system(cmd)
end
