#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'csv'
require 'bio'

opt = OpenStruct.new
o = OptionParser.new
o.banner << " single-marker.csv fasta"
begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size != 2)
  STDERR << o
  exit(1)
end

csv, pep = ARGV

seqs = Hash.new
Bio::FlatFile.new(Bio::FastaFormat, File.new(pep)).each do |seq|
  seqs[seq.entry_id] = seq.seq
end


genes = Hash.new
orgs = nil

CSV.foreach(csv, :headers=>true) do |row|
  gene = row[row.headers.first]
  orgs = row.headers - [row.headers.first]
  genes[gene] = Hash.new
  orgs.each do |org|
    if (!File.exist?(org))
      STDERR << "You don't have a directory named " << org << "\n"
      exit(1)
    end
    File.new(org + "/" + gene + ".tbl").each do |line|
      if (line !~/^#/)
        genes[gene][org] = line.split(" ").first
      end
    end
  end
end

genes.keys.each do |gene|
  out = File.new(gene + ".fa", "w")
  orgs.each do |org|
    seq = seqs[genes[gene][org]]
    if (seq.nil?)
      STDERR << "I can't find seq for " << genes[gene][org] << " (" << gene << " " << org << ")\n"
      exit(1)
    end
    out.print Bio::Sequence::AA.new(seq).to_fasta(org, 60)
  end
  out.close
end
