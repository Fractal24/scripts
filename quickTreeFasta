#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'
require 'bio'
require 'apis_lib'
require 'Newick'
require 'fpdf'

quicktree = `which quicktree`.chomp

if quicktree == ""
  STDERR << "I can't find quicktree on your path!\n"
  exit(1)
end

origARGV = ARGV.dup # keep unparsed copy for grid

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :input, "fasta alignment(s)", :required =>true, :type =>:strings
  opt :bootstrap, "number of bootstraps (or 0 to not bootstrap)", :default=>100, :type=>:integer
  opt :distance, "output distance matrix rather than tree"
  opt :outgroup, "use specified taxon as outgroup", :type=>:string
  opt :unrooted, "leave tree unrooted"
  opt :project, "run on grid with project number specified", :type=>:string
end

if (opts.project)
  cmd = cmdLine($0, opts, [:project])
  qsystem(cmd, opts.project)
  exit(0)
end

opts.input.each do |fasta|
  dna = isDNA?(fasta)
  if (dna)
    STDERR << "quicktree only handles proteins\n"
    exit(1)
  end
  name = File.basename(fasta).split(".").first
  tmpdir = ENV["HOME"] + "/.tmp"
  Dir.mkdir(tmpdir) if !File.exists?(tmpdir)
  tmpdir += "/" + name + "_" + Time.now.to_f.to_s
  Dir.mkdir(tmpdir) if !File.exists?(tmpdir)
  tname = tmpdir + "/" + name
  aliHash = aliasFasta(fasta, nil, tname, opts.trim)
  stock = fasta2Stockholm(tname)
  if (opts.bootstrap > 0)
    boot = "-b #{opts.bootstrap}"
  else
    boot = ""
  end
  if (opts.distance)
    system("#{quicktree} -out m #{stock} > #{name}_quick.dist")
  else
    system("cd #{tmpdir};#{quicktree} #{boot} #{stock} > #{tmpdir}/quick.tree")
    tree = NewickTree.fromFile("#{tmpdir}/quick.tree")
    tree.unAlias(aliHash)
    if (opts.outgroup)
      outNode = tree.findNode(opts.outgroup)
      if (outNode.nil?)
        STDERR.printf("taxon #{opts.outgroup} not found in tree!\n")
      elsif (!opts.unrooted)
        tree = tree.reroot(outNode)
      end 
    else
      tree = tree.midpointRoot
    end  
    tree.write("#{name}_quick.tree")
    tree.draw("#{name}_quick.tree.pdf")
  end
  cleanup(tmpdir)
end
