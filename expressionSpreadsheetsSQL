#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'
require 'sqlite3'
require 'GeneExpression'
require 'fastercsv'

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :database, "rnaseq sqlite database", :required=>true, :type=>:string
  opt :experiment, "experiment name", :type=>:string
end

db = SQLite3::Database.new(opts.database)
if (!opts.experiment || db.get_first_value("SELECT count(sample) FROM counts WHERE experiment=?",opts.experiment)==0)
	STDERR << "You need to supply an experiment from the following:\n"
	db.execute("SELECT DISTINCT experiment FROM counts").each do |row|
		STDERR << row.first << "\n"
	end
else
	org = db.get_first_value("SELECT org FROM sample_desc WHERE experiment=?", opts.experiment)
	ann = annFromOrg(db, org)
	lengths = gene_lengths(db, org)
	samples, desc = samplesFromExperiment(db, opts.experiment)
	counts, total = countsFromExperiment(db, opts.experiment)
	header = ["Transcript"]
	["RPKM","Counts","Rank"].each do |label|
		samples.each do |sample|
			header.push(sample + " " + desc[sample] + " " + label)
		end
	end
	header += ann_headers
	STDERR << "Writing Spreadsheet...\n"
	print header.to_csv
	ann.keys.sort.each do |transcript|
		rcount = Hash.new
		row = [transcript]
		samples.each do |sample|
			rpkm = gene_rpkm(counts[sample][transcript].to_i, total[sample], lengths[transcript])
			row.push(rpkm)
		end
		samples.each do |sample|
			row.push(counts[sample][transcript])
			rcount[sample] = counts[sample][transcript]
		end
		ranks = rankHash(rcount)
		samples.each do |sample|
			row.push(ranks[sample])
		end
		row += ann[transcript]
		print row.to_csv
	end
end
db.close
