#!/usr/bin/env ruby

require 'bio'
require 'ZFile'
require 'trollop'

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :input, "input DNA fasta file", :required=>true, :type=>:string
  opt :minorf, "minimum orf size (in aa)", :default=>75
  opt :longest, "only print longest ORF per transcript"
  opt :starts, "regex of start aas", :default=> "M|I|L|V"
end

Bio::FlatFile.new(Bio::FastaFormat, ZFile.new(opts.input)).each do |seq|
  longest = nil
  next if seq.length < opts.minorf*3
  [1, 2, 3, -1, -2, -3].each do |frame|
    prot = seq.naseq.translate(frame, 11)
    prot.seq.split(/\*|$/).each do |orf|
      start = -1
      while start = orf.index(/#{opts.starts}/, start + 1)
        norf = orf[start..orf.length]
        orfStart = frame.abs + 3*prot.seq.index(norf)
        orfEnd = orfStart + (norf.length*3) - 1
        orfName = seq.entry_id + ":" + orfStart.to_s + "-" + orfEnd.to_s
        if frame > 0
          orfName += "(+)"
        else
          orfName += "(-)"
        end
        if norf.length >= opts.minorf
          if opts.longest
            if !longest || norf.length > longest.length
              longest = Bio::Sequence.new(norf).to_fasta(orfName, 60)
            end
          else
            print Bio::Sequence.new(norf).to_fasta(orfName, 60)
          end
        end
      end
    end
  end
  print longest if longest && opts.longest
end
