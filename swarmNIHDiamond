#!/usr/bin/env python

import argparse
import os
import bz2

parser = argparse.ArgumentParser()
parser.add_argument("-q", "--query", required=True, nargs="*",
                    help="input query file(s)")
parser.add_argument("-p", "--program", required=True, help="program (blastp, blastx)")
parser.add_argument("-d", "--database", required=True, help = "diamond database")
parser.add_argument("-l", "--local", default=100, type=int,
                    help="gigabytes of local space to allocate (default 100)")
parser.add_argument("-t", "--threads", type=int, default=4,
                    help="threads per job (default 4)")
parser.add_argument("-g", "--gigabytes", type=int, default=4,
                    help="gigabytes allocated per process (default 4)")
args = parser.parse_args()

out = open("diamond.swarm", "w")
for query in args.query:
    full_file = os.path.abspath(query)
    match = full_file + ".match"
    if "bz2" in full_file:
        out.write("bzcat %s > %s; " % (full_file, full_file.split(".bz2")[0]))
        full_file = full_file.split(".bz2")[0]
    out.write("diamond %s -p %d ---q %s -d %s -t %s -a %s ; "
                 % (args.program, args.threads, full_file, 
                    args.database, "/lscratch/$SLURM_JOBID", match))
    out.write("diamond view -a %s -o %s; rm %s\n" 
                 % (match + ".daa", full_file + ".m8", match + ".daa"))

out.close()
print("command to run is swarm -g %d -t %d -f %s --gres=lscratch:%d\n"
      % (args.gigabytes, args.threads,"diamond.swarm", args.local))
