#!/usr/bin/env Rscript
# csv file needs columns with sample names with _Count e.g. FooR1_Count
# also, gene in gene_id
# sample.csv three columns Sample,Group,Name
# eg.  NH4R1,1,NH4 
#      NH4R2,1,NH4

createDisp <- function (counts, group) {
  dlist <- DGEList(counts = counts, group = factor(group))
  keep <- rowSums(cpm(dlist)> 2) >= min(table(group))
  dlist <- dlist[keep, ]
  dlist$samples$lib.size <- colSums(dlist$counts)
  norm <- calcNormFactors(dlist)
  pdf(file="mdsplot.pdf")
  plotMDS(norm, cex=0.5)
  commonDisp <- estimateCommonDisp(norm)
  tagwiseDisp <- estimateTagwiseDisp(commonDisp)
  tagwiseDisp
}

findDE <- function(disp, group1, group2, name, n) {
  et <- exactTest(disp, pair=c(group1,group2))
  de <- topTags(et, n = n)
  fdr <- data.frame(row.names=row.names(de), FDR=de$table$FDR)
  names(fdr)[1] <- name
  fdr
}

library("edgeR")
options <- commandArgs(trailingOnly = TRUE)
if (length(options) != 2) {
  print("Usage: runEdgeR expression.csv groups.csv")
} else {
  csv <- read.csv(options[1], row.names="gene_id")
  counts <- subset(csv, select=grep("_Count", colnames(csv)))
  gcsv <- read.csv(options[2], row.names="Sample")
  groups <- c()
  for (i in 1:length(counts)) {
    name <- as.character(strsplit(colnames(counts)[i], "_Count")[1])
    colnames(counts)[i] <- name
    group <- gcsv[name,1]
    groups <- c(groups, group)
  }
  
  disp <- createDisp(counts, groups)
  for (i in 1:(max(groups) - 1)) {
    group1 <- as.character(gcsv[gcsv$Group==i,]$Name[1])
    if (group1 != "NULL") {
      for (j in (i+1):max(groups)) {
        group2 <- as.character(gcsv[gcsv$Group==j,]$Name[1])
        if (group2 != "NULL") {
          name <- paste0(group1,"_vs_",group2)
          de <- findDE(disp, i, j, name, length(row.names(counts)))
          de_order <- match(rownames(csv), rownames(de))
          cnames <- colnames(csv)
          csv <- cbind(csv, de[de_order,])
          colnames(csv) <- c(cnames, name)
        }
      }
    }
  }
  write.csv(csv, file=paste0(options[1],"_edgeR.csv"), na = "")
}