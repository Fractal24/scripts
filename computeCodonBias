#!/usr/bin/env ruby

require 'ostruct'
require 'optparse'
require 'rubygems'
require 'DBwrapper'
require 'CodonBias'
opt = OpenStruct.new

opt.everything = false
opt.database = "combodb"
opt.taxonomy = false

ARGV.options {|opts|
  opts.banner << " contig-id...contig-id..."
  opts.on("-e", "--everything", 
	  "compute for everything") {|t| opt.everything = t}
  opts.on("-t ", "--taxonomy ", String, 
	  "limit to taxonomy") {|t| opt.taxonomy = t}
  begin
    opts.parse!
  rescue
    STDERR.puts $!.message
    STDERR.puts opts
    exit(1)
  end
  if (ARGV.size < 1 && (!opt.everything && !opt.taxonomy))
    STDERR.puts opts
    exit(1)
  end
}

db = MySQL.new("mysql-lan-pro.jcvi.org", opt.database,
                 "apis", "apis_user")

species = Hash.new
taxonomy = Hash.new
if (opt.everything || opt.taxonomy)
  query = "SELECT species, name, taxonomy FROM contigs"
  query += " WHERE taxonomy LIKE '%#{opt.taxonomy}%'" if opt.taxonomy
  db.query(query).each {|row|
    sp, name, tax = row
    species[sp] = [] if species[sp].nil?
    species[sp].push(name) 
    taxonomy[sp] = tax
  }
else
  ARGV.each {|name|
    db.query("SELECT species, taxonomy FROM contigs WHERE name='#{name}'").each {|row|
      sp, tax = row
      species[sp] = [] if species[sp].nil?
      species[sp].push(name)
      taxonomy[sp] = tax
    }
  }
end

species.keys.sort.each {|key|
  bias = CodonBias.new
  species[key].each {|con|
    db.query("SELECT seq FROM transcripts WHERE contig_name = '#{con}'").each {|row|
      seq = row[0]
      bias.add(seq)
    }
  }
  bias.normalize
  printf("%s",key)
  bias.counts.each {|num|
    printf(",%0.6f",num)
  }
  printf("\n")
}
