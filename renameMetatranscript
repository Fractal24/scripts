#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'rubygems'
require 'bio'
require 'Btab'
require 'ZFile'

$VERBOSE = nil
opt = OpenStruct.new
o = OptionParser.new
o.banner << " fasta [fasta...]"
begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size < 1)
  STDERR << o
  exit(1)
end


ARGV.each do |fasta|
  name = File.basename(fasta).split(".").first
  ali = File.new(name + ".ali", "w")
  system("cp #{fasta} #{fasta}.orig")
  fa = File.new(name + ".fna", "w")

  aliH = Hash.new
  number = "_0000000"
  Bio::FlatFile.new(Bio::FastaFormat, ZFile.new(fasta + ".orig")).each {|seq|
    number.succ!
    newName = name + number
    aliH[seq.entry_id] = newName
    ali.printf("%s\t%s\n",seq.entry_id, newName)
    fa.print Bio::Sequence::NA.new(seq.seq).to_fasta(newName, 60)
  }
  ali.close
  fa.close
end
