#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'rubygems'
require 'dm-core'
require 'ApisDB'
require 'fastercsv'

opt = OpenStruct.new
opt.host = "mysql://access:access@mysql-lan-pro"


o = OptionParser.new
o.banner << " rank"
o.on("-h ", "--host ", String, "database host (default #{opt.host})") {|t| opts.host = t}
begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size != 1)
  STDERR << o
  exit(1)
end

rank = ARGV.pop

DataMapper.setup(:default, opt.host + "/misc_apis")

dbs = repository(:default).adapter.select("SHOW DATABASES;").grep(/_apis/)

print ["Database", "Dataset", "Owner", "Date Added", "Count"].to_csv

dbs.each do |db|
  next if db == "compdb_apis" || db =="gos_io_apis"
  STDERR.printf("Processing %s...\n", db)
  DataMapper.setup(:default, opt.host + "/#{db}")
  query = "SELECT  dataset.dataset, owner, date_added, count(*) c from classification"
  query += ", dataset where #{rank} <> trim(#{rank})"
  query += "AND dataset.dataset = classification.dataset group by #{rank}"
  repository(:default).adapter.select(query).each do |row|
    print [db, row.dataset, row.owner, row.date_added, row.c].to_csv
  end
end