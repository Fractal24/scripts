#!/usr/bin/env ruby

require 'optimist'

ARGV.push("--help") if ARGV.empty?
opts = Optimist::options do
  banner File.basename($0)
  opt :input, "input fastqs (R1)", :required=>true, :type=>:strings
  opt :db, "kraken db", :default=>"/data/MicrobiomeCore/JAMSdb/db/krakendb/JAMSkdb"
  opt :outdir, "output dir", :default=>"/scratch/#{ENV["USER"]}"
  opt :threads, "threads", :default=>16
end

opts.input.each do |fq|
  r2 = fq.gsub("_R1", "_R2")
  if File.size(fq) > 14 && File.exists?(fq) && File.exists?(r2)
    out = opts.outdir+"/" + File.basename(fq).split("_R1").first+".kraken"
    o1 = "/lscratch/$SLURM_JOB_ID/"+File.basename(out)
    if !File.exists?(out+".bz2")
      dbname = "/lscratch/$SLURM_JOB_ID/"+File.basename(opts.db)
      cmd = "if [ ! -d #{dbname} ]; then "
      cmd += "cp -r -L #{opts.db} /lscratch/$SLURM_JOB_ID;fi;"
      cmd += "kraken -db #{dbname} --paired --fastq-input "
      cmd += " --bzip2-compressed --only-classified-output "
      cmd += "--output #{o1} #{fq} #{r2} --threads #{opts.threads};"
      cmd += "bzip2 #{o1};cp #{o1}.bz2 #{out}.bz2;rm #{o1}.bz2"
      print cmd+"\n"
    end
  end
end
