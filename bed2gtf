#!/usr/bin/env python

import os.path
import sys
from optparse import OptionParser

# Process command line options
usage = "Usage: bed2gtf label <bed file> ..."
option_parser = OptionParser(usage)
(options, args) = option_parser.parse_args()

if len(args) < 2:
  print usage
  sys.exit(1)

label = args.pop(0)                                                               
for input_filename in args:
  # Open the input file.
  input = open(input_filename, "r")
  (output_dir, output_filename) = os.path.split(input_filename)
  output_filename = output_filename[0:-3] + 'gtf'
  output = open(output_filename, "w")

  genNum = {}
  maxCount = {}
  # Read line by line.
  for line in input:
    line = line[:-1]
    (chr, start, end, id, score, strand) = line.split("\t");
    if label=="exon":
      gene, rest = id.split("_cds_", 2);
    elif label=="intron":
      gene, rest = id.split("_intron_", 2);
    num = int(rest.split("_")[0])
    start = int(start)
    end = int(end)
    if not genNum.has_key(gene):
      maxCount[gene] = 0
      genNum[gene] = 0
    if num <= maxCount[gene]:
      maxCount[gene] = 0
      genNum[gene] += 1
    fullGene = gene + "_" + str(genNum[gene])
    maxCount[gene] = num
    s = "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\tgene_id \"%s\"; transcript_id \"%s\";"% \
        (chr, "bed2gtf", label, start, end, score, strand, "0", fullGene, fullGene)
    print >> output, s
  input.close()
  output.close()
