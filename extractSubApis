#!/usr/bin/env ruby

require 'ostruct'
require 'optparse'
require 'rubygems'
require'bio'
include Bio
opt = OpenStruct.new

ARGV.options {|opts|
  opts.banner << " fasta list dir"
  #opts.on(nil, "--report", "run apisReport when done") {|t| opt.report = t}    
  begin
    opts.parse!
  rescue
    STDERR.puts $!.message
    STDERR.puts opts
    exit(1)
  end
  if (ARGV.size != 3)
    STDERR.puts opts
    exit(1)
  end
}

fasta, list, dir = ARGV

Dir.mkdir(dir)
Dir.mkdir(dir + "/trees")
Dir.mkdir(dir + "/neighbors")

seen = Hash.new
File.new(list).each {|line|
  seen[line.chomp] = true
}
outFasta = File.new(dir + "/out.pep", "w")

FlatFile.new(FastaFormat, File.new(fasta)).each {|seq|
  if (seen[seq.entry_id] && File.exists?("neighbors/" + seq.entry_id + ".nei"))
    outFasta.print seq
    File.link("trees/#{seq.entry_id}.tree", dir + "/trees/#{seq.entry_id}.tree")
    File.link("trees/#{seq.entry_id}.tree.pdf", dir + "/trees/#{seq.entry_id}.tree.pdf")
    File.link("neighbors/#{seq.entry_id}.nei", dir + "/neighbors/#{seq.entry_id}.nei")
  end
}

outFasta.close
