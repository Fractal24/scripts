#!/usr/bin/env ruby

require 'rubygems'
require 'mysql'

if (ARGV.size < 1)
  STDERR.printf("Usage: %s [-v] num [usedTaxa.tab]\n", File.basename($0))
  exit(1)
end

if (ARGV.first == "-v")
  verbose = true
  ARGV.shift
else
  verbose = false
end

num, db = ARGV

if (db.nil?)
  db = Mysql.new("mysql-lan-pro", "access", "access", "phylodb")
else
  tax = Hash.new
  File.new(db).each do |line|
    current, name, parent, rank = line.chomp.split("\t")
    tax[current.to_i] = [name, parent.to_i, rank]
  end
  db = tax
end

def recurseTaxonomy(db, current, verbose)
  if (db.class == Hash)
    name, parent, rank = db[current]
  else
    name, parent, rank = db.query("SELECT name, parent_id, rank FROM taxonomy WHERE taxon_id=#{current}").fetch_row
  end
  if (name.nil? || parent.to_i == 1)
    []
  else
    name = name + " (" + current.to_s + ")" if verbose
    recurseTaxonomy(db, parent, verbose).to_a + [name] 
  end
end


id = num.to_i


print recurseTaxonomy(db, id, verbose).join("; ") + "\n"
