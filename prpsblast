#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'
require 'bio'
require 'Grid'

$VERBOSE = nil
ARGV.push("-h") if ARGV.empty?

opts = Trollop::options do
  banner File.basename($0)
  opt :blast, "blast program", :default=>"rpsblast", :type => :string
  opt :database, "BLAST database to use", :required => true, :type => :string
  opt :evalue, "BLAST evalue", :default => 1e-5, :type => :float
  opt :format, "BLAST output format (ncbi, m8)", :default=>"ncbi"
  opt :input, "FASTA input file(s) to blast", :required => true, :type => :strings
  opt :maxhits, "max number of BLAST hits", :default => 50, :type => :integer
  opt :project, "JCVI project number if not local", :type => :string
  opt :sizejob, "number of sequences per grid job", :default => 1000
  opt :queue, "grid queue to use", :type=>:string, :default => "medium"
  opt :verbose, "report more messages"
end

blast = opts.blast + " -m 8 -e 1e-5 -p t -d #{db} -i "
opts.input.each do |file|
  if !File.exists?(file)
    STDERR.printf("File %s does not exist!\n", file)
    next
  end
  grid = Grid.new(blast, opts.project, "4G")
  out = nil
  count = 0
  Bio::FlatFile.new(Bio::FastaFormat, File.new(file)).each do |seq|
    if (count % opts.sizejob == 0)
      out.close if !out.nil?
      out = File.new(grid.next, "w")
    end 
    out.print seq
    count += 1
  end
  out.close
  grid.submit(sync = true)
  grid.cleanup
  bout = File.basename(file) + "_vs_" + File.basename(db) + ".rpsblast"
  berr = File.basename(file) + "_vs_" + File.basename(db) + ".err"
  File.rename("rpsblast.out", bout)
  File.rename("rpsblast.err", berr)
end
