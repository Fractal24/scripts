#!/usr/bin/env ruby

require 'rubygems'
require 'bio'
require 'trollop'

ARGV.push("--help") if ARGV.empty?
opts = Trollop::options do
  banner File.basename($0)
  opt :input, "fasta file", :required=>true, :type=>:string
  opt :gff, "gff file", :type=>:string, :required=>true
  opt :upstream, "upstream length", :type=>:integer, :default=>1000
  opt :transcripts, "file with transcript ids to check", :type=>:string, :required=>true
end

transcripts = Hash.new
File.new(opts.transcripts).each do |line|
  transcripts[line.chomp] = true
end

startEx = Hash.new
strandEx = Hash.new
contigEx = Hash.new
File.new(opts.gff).each do |line|
  contig, method, feature, start, stop, gc, strand, score, att = line.chomp.split("\t")
  if att =~/transcript_id \"([^"]*)\"/
    transcript = $1
  else
    transcript = nil
  end
  if (feature =~ /exon/ && transcripts[transcript])
    strandEx[transcript] = strand
    contigEx[transcript] = contig
    if !startEx[transcript] || (strand == "+" && start.to_i < startEx[transcript]) ||
      (strand == "-" && start.to_i > startEx[transcript])
      startEx[transcript] = start.to_i
    end
  end
end

Bio::FlatFile.new(Bio::FastaFormat, File.new(opts.input)).each do |seq|
  contigEx.keys.each do |key|
    if contigEx[key] == seq.entry_id
      if strandEx[key] == "+"
        subseq = seq.naseq.subseq(startEx[key] - 1000, startEx[key] - 1)
      else
        subseq = seq.naseq.subseq(startEx[key] + 1, startEx[key] + 1000).complement
      end
      print subseq.to_fasta(key + "_upstream", 60)
    end
  end
end