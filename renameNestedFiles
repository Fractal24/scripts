#!/usr/bin/env ruby

require 'ftools' # routines for copying files, etc.

# rename (actually copies as the original files are untouched) files within a common directory structure
# example: files like /usr/local/blarg/a/nuc.fasta /usr/local/blarg/b/nuc.fasta to: a.fasta b.fasta by 
# renameNestedFiles /usr/local/blarg /usr/local/blarg/*/nuc.fasta


if (ARGV.size > 1) # has at least common part and at least one file to work on
  dir = ARGV.shift # first argument is common directory
  ARGV.each do |file| # loop over all files given to command
    if (file =~/#{dir}\/([^\/+])/) # to rename, dir must be part of path
      name = $1 # unique name in directory
      ext = file.split(".").last # save file extension for renamed file
      File.copy(file, name + "." + ext)
    else
      STDERR.printf("Error: %s is not part of %s\n", dir, file)
    end
  end
else
  STDERR.printf("Usage: %s common-name file [...file...]\n", File.basename($0))
end