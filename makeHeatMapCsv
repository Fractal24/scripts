#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'csv'

opt = OpenStruct.new


o = OptionParser.new
o.banner << " expression-csv"

begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size != 1)
  STDERR << o
  exit(1)
end

csv, rest = ARGV

conditions = nil
condNames = nil
outName = File.basename(csv, ".csv") + "_heatmap.tab"
outFile = File.new(outName, "w")
columns = nil

CSV.foreach(csv, options = {:headers => true, :converters => :numeric}) do |row|
  next if row["Pfam-Def"].nil? || row["Pfam-Def"] == 0
  if (!conditions)
    conditions = row.headers.grep(/ Normalized|.by.station/)
    condNames = conditions.collect{|x| x.split(/ Normalized|.by.station/).first}
    outFile.print (["Gene"] + condNames).to_csv(options = {:col_sep => "\t"})
  end
  name = row[row.headers.first] + " " + row["Pfam-Def"].to_s + " " + row["R"].to_s
  next if name =~/ribosomal/i
  out =  [name] + conditions.collect{|x| Math.log2(row[x] + 1e-9)}
  outFile.print out.to_csv(options = {:col_sep => "\t"})
  columns = out.length if columns.nil?
end
outFile.close
system("orderHeatMap #{outName} > #{outName}.tmp; mv #{outName}.tmp #{outName}")
system("drawheatmap.pl #{outName} > #{outName.gsub("tab", "svg")}")
