#!/usr/bin/env ruby

require 'rubygems'
require 'optimist'
require 'bio'
require 'Grid'

$VERBOSE = nil
ARGV.push("-h") if ARGV.empty?

opts = Optimist::options do
  banner File.basename($0)
  opt :blast, "blast program", :default=>"blastp", :type => :string
  opt :database, "BLAST database to use", :required => true, :type => :string
  opt :evalue, "BLAST evalue", :default => 1e-9, :type => :float
  opt :format, "BLAST output format", :default=>"ncbi"
  opt :input, "FASTA input file(s) to blast", :required => true, :type => :strings
  opt :maxhits, "max number of BLAST hits", :default => 50, :type => :integer
  opt :maxlocal, "maximum number of simultaneous local processes", :default=>4
  opt :project, "JCVI project number if not local", :type => :string
  opt :sizejob, "number of sequences per grid job", :default => 1000
  opt :queue, "grid queue to use", :type=>:string, :default => "medium" 
  opt :verbose, "report more messages"
end

if (File.basename(opts.database) == opts.database)
  opts.database = Dir.pwd + "/" + opts.database
end

Optimist::die :blast, "must be blastn, blastp, blastx, tblastn, tblastx" unless opts.blast =~ /^([t]?blast)/ 

Optimist::die :format, "must be ncbi, m8, btab, m8plus" unless opts.format=~/ncbi|m8$|m8plus|btab/

blast = "blastall -p #{opts.blast} -d #{opts.database} -b#{opts.maxhits}"
blast += " -m8 " if opts.format == "m8"
blast += " -v#{opts.maxhits} -e#{opts.evalue} -i "

opts.input.each do |file|
  if (!File.exists?(file))
    STDERR.printf("File %s does not exist!\n", file)
    next
  end
  grid = Grid.new(blast, opts.project, "4G", opts.queue, Dir.pwd + "/tmp")
  out = nil
  count = 0
  Bio::FlatFile.new(Bio::FastaFormat, File.new(file)).each do |seq|
    if (count % opts.sizejob == 0)
      out.close if (!out.nil?)
      out = File.new(grid.next, "w")
    end 
    out.print seq
    count += 1
  end
  out.close
  if !opts.project
    STDERR << "Warning: running locally, not on grid...\n" if opts.verbose
  end
  grid.submit(sync = true, !opts.project, opts.verbose, opts.maxlocal)
  grid.cleanup
  bout = File.basename(file) + "_vs_" + File.basename(opts.database) + "." + opts.blast + "." + opts.format
  berr = File.basename(file) + "_vs_" + File.basename(opts.database) + ".err"
  if opts.format == "btab"
    system("btab blastall.out;mv blastall.out.btab blastall.out")
  elsif opts.format == "m8plus"
    system("m8plus -i blastall.out;mv blastall.out.m8plus blastall.out")
  end
  File.rename("blastall.out", bout)
  File.rename("blastall.err", berr)
end
