#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'
require 'bio'
require 'SunGrid'

ARGV.push("-h") if ARGV.empty?

opts = Trollop::options do
  banner File.basename($0)
  opt :blast, "blast program", :default=>"blastp", :type => :string
  opt :database, "BLAST database to use", :required => true, :type => :string
  opt :evalue, "BLAST evalue", :default => 1e-9, :type => :float
  opt :format, "BLAST output format (ncbi, m8, m8plus, btab)", :default=>"ncbi"
  opt :input, "FASTA input file(s) to blast", :required => true, :type => :strings
  opt :maxhits, "max number of BLAST hits", :default => 50, :type => :integer
  opt :project, "JCVI project number", :required => true, :type => :string
  opt :sizejob, "number of sequences per grid job", :default => 1000
  opt :queue, "grid queue to use", :type=>:string, :default => "medium" 
end

if (File.basename(opts.database) == opts.database)
  opts.database = Dir.pwd + "/" + opts.database
end

Trollop::die :choose_blastn_blastp_blastx_tblastn_tblastx unless opts.blast =~ /^blast[n|p|x]|tblastn|tblastx/ 

Trollop::die :choose_ncbi_m8_m8plus_btab unless opts.format=~/ncbi|m8|m8plus|btab/

blast = "blastall -p #{opts.blast} -d #{opts.database} -b#{opts.maxhits}"
blast += " -m8 " if opts.format == "m8"
blast += " -v#{opts.maxhits} -e#{opts.evalue} -i "
blast = [blast, "badgerBtab"] if opts.format == "btab"
blast = [blast, "badgerM8plus"] if opts.format == "m8plus"

opts.input.each do |file|
  if (!File.exists?(file))
    STDERR.printf("File %s does not exist!\n", file)
    next
  end
  grid = SunGrid.new(blast, opts.project, "4G", opts.queue)
  out = nil
  count = 0
  Bio::FlatFile.new(Bio::FastaFormat, File.new(file)).each do |seq|
    if (count % opts.sizejob == 0)
      out.close if (!out.nil?)
      out = File.new(grid.next, "w")
    end 
    out.print seq
    count += 1
  end
  out.close
  grid.submit(sync = true)
  grid.cleanup
  bout = File.basename(file) + "_vs_" + File.basename(opts.database) + "." + opts.blast + "." + opts.format
  berr = File.basename(file) + "_vs_" + File.basename(opts.database) + ".err"
  File.rename("blastall.out", bout)
  File.rename("blastall.err", berr)
end
