#!/usr/bin/env ruby

require 'ostruct'
require 'optparse'
require 'apisdb'
opt = OpenStruct.new

ARGV.options {|opts|
  opts.banner << " db-name"
  #opts.on(nil, "--report", "run apisReport when done") {|t| opt.report = t}    
  begin
    opts.parse!
  rescue
    STDERR.puts $!.message
    STDERR.puts opts
    exit(1)
  end
  if (ARGV.size != 1)
    STDERR.puts opts
    exit(1)
  end
}

fix = {"Bacteria; Bacteroidetes" => "Bacteria; Bacteroidetes/Chlorobi group",
  "Bacteria; Chlorobi" => "Bacteria; Bacteroidetes/Chlorobi group",
  "Bacteria; Chlamydiae" => "Bacteria; Chlamydiae/Verrucomicrobia group",
  "Bacteria; Verrucomicrobia" => "Bacteria; Chlamydiae/Verrucomicrobia group",
  "Actinobacteria; Actinobacteria (class)" => "Actinobacteria",
  "Bacteroidetes (class)" => "Bacteroidetes",
  "delta/epsilon subdivisions; Deltaproteobacteria" => "Deltaproteobacteria",
  "delta/epsilon subdivisions; Epsilonproteobacteria" => "Epsilonproteobacteria",
  "Fusobacteria; Fusobacterales" => "Fusobacteria; Fusobacteria (class); Fusobacteriales",
  "Chloroflexi (class); Chloroflexales" => "Chloroflexales",
  "Chlorobi; Chlorobia" => "Chlorobia",
  "Spirochaetes; Spirochaetes (class)" => "Spirochaetes",
  "unclassified Verrucomicrobia" => "Verrucomicrobia",
  "Verrucomicrobiae; Verrucomicrobiales" => "Verrucomicrobia; Verrucomicrobiales"
}


dbname, rest = ARGV

db = MySQL.new("mysql-lan-pro.jcvi.org", dbname,
                 "jbadger", "plankton")

fix.keys.each {|key|
  db.query("select distinct species, taxonomy from contigs where taxonomy like '%#{key};%'").each {|row|
    p row
    species, tax = row
    newtax = tax.gsub(key, fix[key])
    db.query("update contigs set taxonomy = '#{newtax}' where taxonomy='#{tax}'")
  }
}
