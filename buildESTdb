#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'rubygems'
require 'bio'
require 'DBwrapper'

opt = OpenStruct.new
o = OptionParser.new
o.banner << " est.seq pep.seq"
begin
  o.parse!
rescue
  STDERR << $!.message << "\n"
  STDERR << o
  exit(1)
end
if (ARGV.size != 2)
  STDERR << o
  exit(1)
end

estf, pep = ARGV
num = 1

tax = SQLite.new("taxonomy.db")
est = SQLite.new("phytoest.db")

taxid = Hash.new
taxonomy = Hash.new
species = Hash.new
Bio::FlatFile.new(Bio::FastaFormat, File.new(estf)).each{|seq|
  if (seq.definition =~/\{([^\}]*)\}/)
    sp = $1
    query = "SELECT tax_id FROM \"combodb.taxonomy\" WHERE name='#{sp}'"
    if (!taxid[sp])
      taxid[sp] = tax.get(query)
      taxonomy[sp] = tax.buildTaxFromTaxId(taxid[sp], true)
    end
    species[seq.entry_id] = sp
  end
}
Bio::FlatFile.new(Bio::FastaFormat, File.new(pep)).each {|seq|
  contig =  seq.entry_id.split("_").first
  tid = taxid[species[contig]]
  tx = taxonomy[species[contig]]
  est.insert("apis_proteins",[[num,seq.entry_id,contig,tid,tx,"",seq.seq]])
  num += 1
  STDERR.printf("Loading sequence %d...\n", num) if (num % 1000 == 0)
}
